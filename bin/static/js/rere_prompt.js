


function getReActReasoningPrompt() {
    let prompt = 
	`
	请根据输入的JSON数据，推理并输出应该调用的本地函数、参数。
                          ---------------------------
                          输入的JSON数据：
						  
						  \`\`\`json
                          {
                          "用户提出的问题":"\$\{question\}",
                          "上一轮迭代的推理建议":"\$\{reasoningResult\}",
                          "观察步的回答":"\$\{observeResult\}",
                          "本地函数及参数说明":\$\{agentTools\}
                          }
						  \`\`\`
                        
                        分析结果请以如下JSON格式返回：
						
                          \`\`\`json
                          [
                                {"函数名":"函数具体名称1","参数":{"参数名称":"参数的值","参数名":"参数的值"}},
                                {"函数名":"函数具体名称2","参数":{"参数名称":"参数的值","参数名":"参数的值"}}
                          ]
                          \`\`\`
                          
                        输出的格式示例：
						
                         \`\`\`json
                          [
                                {"函数名":"RereLocalTextDbTool","参数":{"db":"laws","query":"民法与刑法的区别是什么？"}},
                                {"函数名":"RereWebSearchTool","参数":{"query":"今天发生了什么新鲜事？"}}
                          ]
                         \`\`\`
	`;
    return prompt;
}





function getReActObservePrompt() {
    let prompt = `
                         请根据用户提出的问题、推理步的信息需求、行动步的输出结果，核实行动步的输出结果是否与推理步需求相关，并剔除无关的内容。
                         在此基础上，重新总结、整理、编排与补全推理步需要的相关信息，生成用户问题的对应答案。
                         注意：生成的答案应当尽量详细，如果您自己知道相关内容，可以如实进行补充；如果您不知道相关信息，不要编造和杜撰。
                           {
                           "用户问题":"\$\{question\}",
                           "推理步的推理建议":"\$\{reasoningResult\}",
                           "行动步的输出结果":"\$\{actResult\}"
                           }
                         \n
                         分析结果请以如下JSON格式返回：
						 
						 \`\`\`json
                         {
                         "是否继续迭代":true|false,
                         "答案":"对用户问题的回答"
                         }
						 \`\`\`
	`;
    return prompt;
}


function getDefaultChunkTaskSysPrompt() {
    let prompt = `你是一个命名实体识别和实体间关系抽取的分析工具。回答结果必须是严格的JSON格式，结果不能包括JSON以外的任何多余字符，不需要多余的结果介绍和说明。
`;
    return prompt;
}


function getDefaultChunkTaskUserPrompt() {
    let prompt = `\$\{chunk\}。
请提取用户输入的前述文档内容中的命名实体和实体之间的关联关系，并以如果JSON格式返回：

\`\`\`json
{
	"实体列表":[{“实体”: 实体1, "实体类别": 实体类别1}, {"实体": 实体2, "实体类别": 实体类别2}],
	"关系列表":[{"source":实体1,"target"：实体2,"关系类型":关系类型}]
}
\`\`\`

回答结果必须是严格的JSON格式，结果不能包括JSON以外的任何多余字符。
	`;
    return prompt;
}




function getDefaultDomainwordTaskSysPrompt() {
    let prompt = `你是一个领域词汇识别的分析工具。回答结果必须是严格的JSON格式，结果不能包括JSON以外的任何多余字符，不需要多余的结果介绍和说明。
`;
    return prompt;
}


function getDefaultDomainwordTaskUserPrompt() {
    let prompt = `\$\{chunk\}。
请根据以上用户输入的内容，识别领域词汇，并以["领域词汇1", "领域词汇2"]的JSON格式返回。回答结果必须是严格的JSON格式，结果不能包括JSON以外的任何多余字符，不需要多余的结果介绍和说明。

例如，以下文本：
人工智能在教育中的过度商业化可能导致教育资源不均衡。随着人工智能技术的快速发展，越来越多的企业将其应用于教育领域，推出各类智能教育产品和服务。这在一定程度上促进了教育信息化和智能化，但同时也引发了一系列问题。过度商业化可能导致教育资源向富裕地区和学校集中，加剧教育不平等。此外，一些企业可能过分追求利润，忽视教育质量，导致教学质量下降。在这种情况下，人文社科教育领域的创新发展将受到严重影响。因此，亟需加强对人工智能教育产品的监管，确保教育资源公平分配，同时引导企业树立正确的价值观，关注教育质量和公平，以实现人工智能技术在人文社科教育领域的可持续发展。

对应的JSON为：

\`\`\`json
["人工智能", "教育", "商业化", "教育资源", "教育信息化", "智能化", "教育不平等", "富裕地区", "学校", "教学质量", "人文社科教育", "创新发展", "监管", "公平分配", "价值观", "可持续发展"]
\`\`\`
	`;
    return prompt;
}


function getExamplePrompts() {
	let prompts=[
	{'name':'实体与关系抽取（知识图谱）',
	'systemPrompt':
	`
你是一个命名实体识别和实体间关系抽取的分析工具。回答结果必须是严格的JSON格式，结果不能包括JSON以外的任何多余字符，不需要多余的结果介绍和说明。
	`,
	'userPrompt':
	`
	\$\{chunk\}。
请提取用户输入的前述文档内容中的命名实体和实体之间的关联关系，并以如下JSON格式返回：

\`\`\`json
{
	"实体列表":[{“实体”: 实体1, "实体类别": 实体类别1}, {"实体": 实体2, "实体类别": 实体类别2}],
	"关系列表":[{"source":实体1,"target"：实体2,"关系类型":关系类型}]
}
\`\`\`

回答结果必须是严格的JSON格式，结果不能包括JSON以外的任何多余字符。
	`},
	{'name':'批量英文->中文翻译',
	'systemPrompt':
	`
	你是一个用于将英文资料翻译为中文的人工智能助手。
	`,
	'userPrompt':
	`
	\$\{chunk\}。
请将以上内容翻译为中文，语法严谨，用词准确。直接给出翻译结果，不需要对翻译过程进行解释。
	`},
	{'name':'批量情感分析',
	'systemPrompt':
	`
	你是一个用于文本情感分析的人工智能助手。
	`,
	'userPrompt':
	`
\$\{chunk\}。
请判定以上内容的情绪为正面还是负面，并以如下JSON格式返回：

\`\`\`json
{'情绪': '情绪类别', '判定原因': '原因说明'}
\`\`\`
	`}
	
	];
	
	
	return prompts;
}


